<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DataObjects_Framework</name>
    </assembly>
    <members>
        <member name="T:DataObjects_Framework.Objects.ClsKeys">
            <summary>
            Used for loading Data Objects
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Objects.ClsKeys.Add(System.String,System.Int64)">
            <summary>
            Adds a Key Definition
            </summary>
            <param name="Name">
            Name of the key, most likely the primary key of the table used by the Data Object
            </param>
            <param name="Value">
            The value of the key, most likely the ID of the table
            </param>
        </member>
        <member name="M:DataObjects_Framework.Objects.ClsKeys.Count">
            <summary>
            Returns the number of keys contained in this object
            </summary>
            <returns></returns>
        </member>
        <member name="P:DataObjects_Framework.Objects.ClsKeys.Item(System.String)">
            <summary>
            Default Property, gets/sets the Key Value with the Key Name supplied
            </summary>
            <param name="Name">
            Name of the key
            </param>
            <returns></returns>
        </member>
        <member name="P:DataObjects_Framework.Objects.ClsKeys.Item(System.Int32)">
            <summary>
            Default Property, gets/sets the Key Value with the index supplied
            </summary>
            <param name="Index">
            Index of the key
            </param>
            <returns></returns>
        </member>
        <member name="P:DataObjects_Framework.Objects.ClsKeys.pName">
            <summary>
            Returns the array of the keys defined
            </summary>
        </member>
        <member name="T:DataObjects_Framework.Objects.ClsKeys.Str_Keys">
            <summary>
            Struct Str_Keys
            </summary>
        </member>
        <member name="F:DataObjects_Framework.Objects.ClsKeys.Str_Keys.Name">
            <summary>
            The name of the key
            </summary>
        </member>
        <member name="F:DataObjects_Framework.Objects.ClsKeys.Str_Keys.Value">
            <summary>
            The value of the key
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Objects.ClsKeys.Str_Keys.#ctor(System.String,System.Int64)">
            <summary>
            Constructor for Str_Keys
            </summary>
            <param name="pName"></param>
            <param name="pValue"></param>
        </member>
        <member name="T:DataObjects_Framework.Objects.ClsBaseObjs">
            <summary>
            Object storage for list of ClsBase objects
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Objects.ClsBaseObjs.Add(System.String,DataObjects_Framework.Base.ClsBase)">
            <summary>
            Adds a ClsBase object to the collection
            </summary>
            <param name="Name">
            The name of the ClsBase object to be used for retrieval
            </param>
            <param name="Obj">
            The ClsBase object to be added
            </param>
        </member>
        <member name="M:DataObjects_Framework.Objects.ClsBaseObjs.Count">
            <summary>
            Gets the number of ClsBase objects stored in the collection
            </summary>
            <returns></returns>
        </member>
        <member name="P:DataObjects_Framework.Objects.ClsBaseObjs.Item(System.String)">
            <summary>
            Returns the object with the name specified
            </summary>
            <param name="Name">
            The name of the object to retrieve
            </param>
            <returns></returns>
        </member>
        <member name="P:DataObjects_Framework.Objects.ClsBaseObjs.pName">
            <summary>
            Returns a string array of the Names of the ClsBase objects in the collection
            </summary>
        </member>
        <member name="P:DataObjects_Framework.Objects.ClsBaseObjs.pList_Obj">
            <summary>
            Returns the ClsBase object collection
            </summary>
        </member>
        <member name="T:DataObjects_Framework.Objects.ClsBaseObjs.Str_Obj">
            <summary>
            Struct Str_Obj
            </summary>
        </member>
        <member name="F:DataObjects_Framework.Objects.ClsBaseObjs.Str_Obj.Name">
            <summary>
            Name of the ClsBase object
            </summary>
        </member>
        <member name="F:DataObjects_Framework.Objects.ClsBaseObjs.Str_Obj.Obj">
            <summary>
            The ClsBase object
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Objects.ClsBaseObjs.Str_Obj.#ctor(System.String,DataObjects_Framework.Base.ClsBase)">
            <summary>
            Constructor for Str_Obj
            </summary>
            <param name="pName"></param>
            <param name="pObj"></param>
        </member>
        <member name="T:DataObjects_Framework.Base.ClsBaseTableDetail">
            <summary>
            Internal, manages the defined table detail
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBaseTableDetail.#ctor(DataObjects_Framework.Base.ClsBase,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{DataObjects_Framework.Common.Do_Constants.Str_ForeignKeyRelation})">
            <summary>
            Constructor for this class
            </summary>
            <param name="Obj_Base">
            Parent Object Base
            </param>
            <param name="HeaderName">
            Parent Table Name, (apparently not used at all)
            </param>
            <param name="TableName">
            Table Detail Table Name
            </param>
            <param name="ViewName">
            Table Detail View Name
            </param>
            <param name="OtherLoadCondition">
            Additional conditions for fetching
            </param>
            <param name="CustomKeys">
            Custom Key definition
            </param>
            <param name="CustomForeignKeys">
            Custom Foreign Key definition
            </param>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBaseTableDetail.Load(DataObjects_Framework.DataAccess.Interface_DataAccess,DataObjects_Framework.Objects.ClsKeys)">
            <summary>
            Loads the table detail data
            </summary>
            <param name="Da">
            An open DataAccess object from calling method
            </param>
            <param name="Keys">
            Key Object to use
            </param>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBaseTableDetail.Save(DataObjects_Framework.DataAccess.Interface_DataAccess)">
            <summary>
            Saves the changes to the detail table
            </summary>
            <param name="Da">
            An open DataAccess from calling method
            </param>
        </member>
        <member name="P:DataObjects_Framework.Base.ClsBaseTableDetail.pTableName">
            <summary>
            Gets the defined table name for this detail table
            </summary>
        </member>
        <member name="P:DataObjects_Framework.Base.ClsBaseTableDetail.pDt">
            <summary>
            Get/Set Property, gets or sets the datatable object for this detail table
            </summary>
        </member>
        <member name="T:DataObjects_Framework.DataAccess.Interface_DataAccess">
            <summary>
            Interface for Data Access Methods
            </summary>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.Interface_DataAccess.GetQuery(DataObjects_Framework.Connection.Interface_Connection,System.String,System.String,System.String,System.String)">
            <summary>
            Fetches a result set from a data source object
            </summary>
            <param name="Connection">
            An open connection object
            </param>
            <param name="SourceObject">
            Data source object to fetch from
            </param>
            <param name="Fields">
            List of fields tp fetch (SQL valid syntax)
            </param>
            <param name="Condition">
            Condition to use the filter the result set (SQL Where valid syntax)
            </param>
            <param name="Sort">
            Sort expression to use to sort the result set (SQL Order By valid syntax)
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.Interface_DataAccess.GetQuery(System.String,System.String,System.String,System.String)">
            <summary>
            Fetches a result set from a data source object
            </summary>
            <param name="SourceObject">
            Data source object to fetch from
            </param>
            <param name="Fields">
            List of fields tp fetch (SQL valid syntax)
            </param>
            <param name="Condition">
            Condition to use the filter the result set (SQL Where valid syntax)
            </param>
            <param name="Sort">
            Sort expression to use to sort the result set (SQL Order By valid syntax)
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.Interface_DataAccess.GetQuery(DataObjects_Framework.Connection.Interface_Connection,System.String,System.String,DataObjects_Framework.Objects.ClsQueryCondition,System.String,System.Int64,System.Int32)">
            <summary>
            Fetches a result set from a data source object
            </summary>
            <param name="Connection">
            An open connection object
            </param>
            <param name="SourceObject">
            Data source object to fetch from
            </param>
            <param name="Fields">
            List of fields tp fetch (SQL valid syntax)
            </param>
            <param name="Condition">
            ClsQueryCondition Object to use the filter the result set
            </param>
            <param name="Sort">
            Sort expression to use to sort the result set (SQL Order By valid syntax)
            </param>
            <param name="Top">
            Limits the number of returned rows in the result set,
            used in pagination
            </param>
            <param name="Page">
            Selects a section based on the Page and Top values in the result set,
            used in pagination
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.Interface_DataAccess.GetQuery(System.String,System.String,DataObjects_Framework.Objects.ClsQueryCondition,System.String,System.Int64,System.Int32)">
            <summary>
            Fetches a result set from a data source object
            </summary>
            <param name="SourceObject">
            Data source object to fetch from
            </param>
            <param name="Fields">
            List of fields tp fetch (SQL valid syntax)
            </param>
            <param name="Condition">
            ClsQueryCondition Object to use the filter the result set
            </param>
            <param name="Sort">
            Sort expression to use to sort the result set (SQL Order By valid syntax)
            </param>
            <param name="Top">
            Limits the number of returned rows in the result set,
            used in pagination
            </param>
            <param name="Page">
            Selects a section based on the Page and Top values in the result set,
            used in pagination
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.Interface_DataAccess.Connect">
            <summary>
            Connects to the defined datasource
            </summary>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.Interface_DataAccess.Close">
            <summary>
            Closes the current connection
            </summary>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.Interface_DataAccess.BeginTransaction">
            <summary>
            Begins a new transaction
            </summary>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.Interface_DataAccess.CommitTransaction">
            <summary>
            Commits the current transaction
            </summary>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.Interface_DataAccess.RollbackTransaction">
            <summary>
            Reverts the current transaction
            </summary>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.Interface_DataAccess.SaveDataRow(System.Data.DataRow,System.String,System.String,System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Saves the datarow to the target table.
            </summary>
            <param name="ObjDataRow">
            The source datarow to be saved.
            </param>
            <param name="TableName">
            The name of the table to be operated.
            </param>
            <param name="SchemaName">
            The name of the schema of the target table.
            </param>
            <param name="IsDelete">
            If true, the operation will be a Delete operation.
            </param>
            <param name="CustomKeys">
            Custom Key definition.
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.Interface_DataAccess.List(System.String,System.String,System.String)">
            <summary>
            Returns a List based on the supplied Table/View Name
            </summary>
            <param name="ObjectName">
            The source data object name
            </param>
            <param name="Condition">
            Additional conditions to be used in fetching the data
            </param>
            <param name="Sort">
            Additional sorting to be used in fetching the data
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.Interface_DataAccess.List(System.String,DataObjects_Framework.Objects.ClsQueryCondition,System.String,System.Int32,System.Int32)">
            <summary>
            Returns a List based on the supplied Table/View Name
            </summary>
            <param name="ObjectName">
            The source data object name
            </param>
            <param name="Condition">
            ClsQueryCondition Object to be used in fetching the data
            </param>
            <param name="Sort">
            Additional sorting to be used in fetching the data
            </param>
            <param name="Top">
            Limits the result set, mainly used for pagination
            </param>
            <param name="Page">
            Fetch a section of the result set based on the supplied Top, mainly used for pagination
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.Interface_DataAccess.List_Count(System.String,DataObjects_Framework.Objects.ClsQueryCondition)">
            <summary>
            Returns the Result Set Count with out actually fetching the result set, mainly used for pagination
            </summary>
            <param name="ObjectName">
            The source data object name
            </param>
            <param name="Condition">
            ClsQueryCondition Object to be used in fetching the data
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.Interface_DataAccess.List_Empty(DataObjects_Framework.Connection.Interface_Connection,System.String)">
            <summary>
            Returns a Empy List based on the supplied source data object Name
            Used for getting the definition of the data object
            </summary>
            <param name="Connection">
            An open connection object
            </param>
            <param name="ObjectName">
            The source data object name
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.Interface_DataAccess.List_Empty(System.String)">
            <summary>
            Returns a Empy List based on the supplied source data object Name
            Used for getting the definition of the data object
            </summary>
            <param name="ObjectName">
            The source data object name
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.Interface_DataAccess.Load(System.String,System.Collections.Generic.List{System.String},DataObjects_Framework.Objects.ClsKeys)">
            <summary>
            Loads the Data Object with the supplied Key,
            when loading table details, the framework assumes the foreign key field of the table detail is the same the parent table
            if not supplied by an explicit foreign key definition
            </summary>
            <param name="ObjectName">
            The source data object to be fetched
            </param>
            <param name="List_Key">
            The defined Key names of the data objects
            </param>
            <param name="Keys">
            The ClsKey object to use
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.Interface_DataAccess.Load_TableDetails(System.String,DataObjects_Framework.Objects.ClsKeys,System.String,System.Collections.Generic.List{DataObjects_Framework.Common.Do_Constants.Str_ForeignKeyRelation})">
            <summary>
            Loads the defined Data Object Table Detail
            </summary>
            <param name="ObjectName">
            The source data object of the Table Detail
            </param>
            <param name="Keys">
            The ClsKey object to use
            </param>
            <param name="Condition">
            Additional conditions to be used in fetching the data
            </param>
            <param name="ForeignKeys">
            Custom defined Keys of the Table Detail
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.Interface_DataAccess.Load_RowDetails(System.String,DataObjects_Framework.Objects.ClsKeys,System.String,System.Collections.Generic.List{DataObjects_Framework.Common.Do_Constants.Str_ForeignKeyRelation})">
            <summary>
            Loads the defined Data Object Row Detail
            </summary>
            <param name="ObjectName">
            The source data object of the Row Detail
            </param>
            <param name="Keys">
            The ClsKey object to use
            </param>
            <param name="Condition">
            Additional conditions to be used in fetching the data
            </param>
            <param name="ForeignKeys">
            Custom defined Keys of the Row Detail
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.Interface_DataAccess.CreateQueryCondition">
            <summary>
            Creates a ClsQueryCondition based on the implementation of this interface
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.Interface_DataAccess.GetTableDef(System.String)">
            <summary>
            Gets the definition of the requested data object
            </summary>
            <param name="TableName">
            The requested data object name
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.Interface_DataAccess.GetSystemParameter(System.String,System.String)">
            <summary>
            Gets the specified system parameter value, or creates a new system parameter with the specified default value
            </summary>
            <param name="ParameterName">
            The system parameter name
            </param>
            <param name="DefaultValue">
            The default value for the parameter if it doesn't exists
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.Interface_DataAccess.GetSystemParameter(DataObjects_Framework.Connection.Interface_Connection,System.String,System.String)">
            <summary>
            Gets the specified system parameter value, or creates a new system parameter with the specified default value
            </summary>
            <param name="Connection">
            An open connection object
            </param>
            <param name="ParameterName">
            The system parameter name
            </param>
            <param name="DefaultValue">
            The default value for the parameter if it doesn't exists
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.Interface_DataAccess.SetSystemParameter(System.String,System.String)">
            <summary>
            Sets a new value to the specified system parameter
            </summary>
            <param name="ParameterName">
            The system parameter name
            </param>
            <param name="ParameterValue">
            The value to be set
            </param>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.Interface_DataAccess.SetSystemParameter(DataObjects_Framework.Connection.Interface_Connection,System.String,System.String)">
            <summary>
            Sets a new value to the specified system parameter
            </summary>
            <param name="Connection">
            An open connection object
            </param>
            <param name="ParameterName">
            The system parameter name
            </param>
            <param name="ParameterValue">
            The value to be set
            </param>
        </member>
        <member name="P:DataObjects_Framework.DataAccess.Interface_DataAccess.Connection">
            <summary>
            Gets the current using Connection Object used by this instance
            </summary>
        </member>
        <member name="T:DataObjects_Framework.Base.ClsBase">
            <summary>
            Base Class for Data Objects
            to be inherited in order to use
            </summary>
        </member>
        <member name="F:DataObjects_Framework.Base.ClsBase.mHeader_TableName">
            <summary>
            The declared TableName of the Data Object
            </summary>
        </member>
        <member name="F:DataObjects_Framework.Base.ClsBase.mHeader_ViewName">
            <summary>
            The declared ViewName of the Data Object
            </summary>
        </member>
        <member name="F:DataObjects_Framework.Base.ClsBase.mHeader_Dr">
            <summary>
            DataRow storage of the Data Object (this.Load() Required)
            </summary>
        </member>
        <member name="F:DataObjects_Framework.Base.ClsBase.mHeader_Key">
            <summary>
            Default/Custom Table Key Definition of the Data Object
            </summary>
        </member>
        <member name="F:DataObjects_Framework.Base.ClsBase.mBase_TableDetail">
            <summary>
            List of Table Detail objecs of the Data Object
            </summary>
        </member>
        <member name="F:DataObjects_Framework.Base.ClsBase.mBase_RowDetail">
            <summary>
            List of Row Detail objecs of the Data Object
            </summary>
        </member>
        <member name="F:DataObjects_Framework.Base.ClsBase.mDa">
            <summary>
            Current Data Access object
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase.#ctor">
            <summary>
            Default Constructor
            Mostly used to access Instance Methods such the DataAccess Object
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase.Setup(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Sets the data object definition, 
            must be set preferably in the constructor of the derived object
            </summary>
            <param name="TableName">
            Table Name of the data object will be using
            </param>
            <param name="ViewName">
            View Name of the data object 
            this will be used in Me.List() and Me.Load() if supplied
            </param>
            <param name="CustomKeys">
            Custom Key definition
            </param>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase.Add_TableDetail(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{DataObjects_Framework.Common.Do_Constants.Str_ForeignKeyRelation})">
            <summary>
            Adds a Detail Table
            </summary>
            <param name="TableName">
            Table Name of the detail table
            </param>
            <param name="ViewName">
            View Name of the detail table, 
            will be used in Load()
            </param>
            <param name="LoadCondition">
            Additional conditions to be used in fetching the data
            </param>
            <param name="CustomKeys">
            Custom Key definition
            </param>
            <param name="CustomForeignKeys">
            Custom Foreign Key definition
            </param>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase.Add_RowDetails(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{DataObjects_Framework.Common.Do_Constants.Str_ForeignKeyRelation})">
            <summary>
            Adds a Row Table, a table detail that is expected to have only one row 
            (one is to one relationship)
            </summary>
            <param name="TableName">
            Table Name of the row detail
            </param>
            <param name="ViewName">
            View Name of the row detail
            </param>
            <param name="LoadCondition">
            Additional conditions to be used in fetching the data
            </param>
            <param name="CustomKeys">
            Custom Key definition
            </param>
            <param name="CustomForeignKeys">
            Custom Foreign Key definition
            </param>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase.List(System.String,System.String)">
            <summary>
            Returns a List based on the supplied Table/View Name
            </summary>
            <param name="Condition">
            Additional conditions to be used in fetching the data
            </param>
            <param name="Sort">
            Additional sorting to be used in fetching the data
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase.List(DataObjects_Framework.Objects.ClsQueryCondition,System.String,System.Int32,System.Int32)">
            <summary>
            Returns a List based on the supplied Table/View Name
            </summary>
            <param name="Condition">
            ClsQueryCondition Object to be used in fetching the data
            </param>
            <param name="Sort">
            Additional sorting to be used in fetching the data
            </param>
            <param name="Top">
            Limits the result set, mainly used for pagination
            </param>
            <param name="Page">
            Fetch a section of the result set based on the supplied Top, mainly used for pagination
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase.List_Empty">
            <summary>
            Returns a Empy List based on the supplied Table/View Name
            Used for getting the definition of the table
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase.List_Count(DataObjects_Framework.Objects.ClsQueryCondition)">
            <summary>
            Returns the Result Set Count with out actually fetching the result set,
            mainly used for pagination
            </summary>
            <param name="Condition">
            ClsQueryCondition Object to be used in fetching the data
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase.Load(DataObjects_Framework.Objects.ClsKeys)">
            <summary>
            (Overridable) Loads the Data Object with the supplied Key,
            when loading table details, the framework assumes the foreign key field of the table detail is the same the parent table
            if not supplied by an explicit foreign key definition
            </summary>
            <param name="Keys">
            Key object to use
            </param>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase.Save(DataObjects_Framework.DataAccess.Interface_DataAccess)">
            <summary>
            (Overridable) Saves changes to the Data Object
            </summary>
            <param name="Da">
            Optional, an open Data_Access Objects that is reused from the calling method
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase.Delete">
            <summary>
            (Overridable) Deletes the Data Object
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase.GetKeys">
            <summary>
            Gets the current Keys of the Data Object
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase.GetKeys(System.Data.DataRow)">
            <summary>
            Gets the Keys of the supplied row using the Key Definition of the Data Object
            </summary>
            <param name="Dr">
            Source datarow, mostly the same definition as from Me.List()
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase.GetKeys(System.Data.DataRow,System.Collections.Generic.List{System.String})">
            <summary>
            Gets the Keys of the supplier datarow using the supplier Key Definition
            </summary>
            <param name="Dr">
            Source datarow
            </param>
            <param name="KeyNames">
            Key definition
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase.AddRequired(System.Data.DataTable)">
            <summary>
            (Overridable) Add required columns (e.g. validation flags) to supplier datatable,
            mostly used in detail tables
            </summary>
            <param name="Dt"></param>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase.AddRequired">
            <summary>
            (Overridable) Calls AddRequired to all defined Table Details
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase.Check_Clear(System.Data.DataTable)">
            <summary>
            (Overridable) Clears Validation Flags to supplied datatable
            </summary>
            <param name="Dt"></param>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase.Check_Clear">
            <summary>
            (Overridable) Clears Validation flags to all defined Table Details
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase.GetNewTmpKey(System.Data.DataTable)">
            <summary>
            (Static) Gets a new TmpKey Value from the supplied datatable with a TmpKey column
            </summary>
            <param name="Dt_Source"></param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase.CheckIfDeleted">
            <summary>
            Checks if the Data Object's Deleted flag is raised
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase.pTableDetail_Get(System.String)">
            <summary>
            Gets the table detail by Name
            </summary>
            <param name="Name">
            The name of the table detail to get
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase.pTableDetail_Set(System.String,System.Data.DataTable)">
            <summary>
            Sets a new value for a table detail searched by name
            </summary>
            <param name="Name">
            The name of the table detail to search
            </param>
            <param name="Value">
            New datatable object to set
            </param>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase.pRowDetail_Get(System.String)">
            <summary>
            Gets the row detail by Name
            </summary>
            <param name="Name">
            Name of the row detail to get
            </param>
            <returns></returns>
        </member>
        <member name="P:DataObjects_Framework.Base.ClsBase.pID">
            <summary>
            Get Property, gets the Data Object ID (or primary key)
            </summary>
        </member>
        <member name="P:DataObjects_Framework.Base.ClsBase.pKey">
            <summary>
            Get Property, gets the current Keys of the Data Object 
            </summary>
        </member>
        <member name="P:DataObjects_Framework.Base.ClsBase.pDr">
            <summary>
            Get Property, gets the datarow for the Data Object (Me.Load() Required)
            </summary>
        </member>
        <member name="P:DataObjects_Framework.Base.ClsBase.pHeader_Key">
            <summary>
            Get Property, gets the Key Definition
            </summary>
        </member>
        <member name="P:DataObjects_Framework.Base.ClsBase.pHeader_TableName">
            <summary>
            Get Property, gets the defined Table Name 
            </summary>
        </member>
        <member name="P:DataObjects_Framework.Base.ClsBase.pHeader_ViewName">
            <summary>
            Get Property, gets the defined View Name 
            </summary>
        </member>
        <member name="P:DataObjects_Framework.Base.ClsBase.pHeader_TableKey">
            <summary>
            Get Property, gets the defined Table Key Name
            </summary>
        </member>
        <member name="P:DataObjects_Framework.Base.ClsBase.pDa">
            <summary>
            Current DataAccess Object
            </summary>
        </member>
        <member name="T:DataObjects_Framework.Objects.ClsCustomException">
            <summary>
            A custom exception object
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Objects.ClsCustomException.#ctor">
            <summary>
            Constructor for ClsCustomException
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Objects.ClsCustomException.#ctor(System.String)">
            <summary>
            Constructor for ClsCustomException
            </summary>
            <param name="Message">
            The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:DataObjects_Framework.Objects.ClsCustomException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor for ClsCustomException
            </summary>
            <param name="Message">
            The error message that explains the reason for the exception.
            </param>
            <param name="InnerException">
            The exception that is the cause of the current exception, or a null reference
            (Nothing in Visual Basic) if no inner exception is specified. - from System.Exception        
            </param>
        </member>
        <member name="T:DataObjects_Framework.Base.ClsBaseRowDetail">
            <summary>
            Internal, manages the defined row detail
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBaseRowDetail.#ctor(DataObjects_Framework.Base.ClsBase,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{DataObjects_Framework.Common.Do_Constants.Str_ForeignKeyRelation})">
            <summary>
            Constructor for this class
            </summary>
            <param name="pObj_Base">
            Parent Object Base
            </param>
            <param name="pHeaderName">
            Parent Table Name, (apparently not used at all)
            </param>
            <param name="pTableName">
            Row Detail Table Name
            </param>
            <param name="pViewName">
            Row Detail View Name
            </param>
            <param name="pOtherLoadCondition">
            Additional conditions for fetching
            </param>
            <param name="CustomKeys">
            Custom Key definition
            </param>
            <param name="ForeignKeys">
            Custom Foreign Key definition
            </param>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBaseRowDetail.Load(DataObjects_Framework.DataAccess.Interface_DataAccess,DataObjects_Framework.Objects.ClsKeys)">
            <summary>
            Loads the row detail data
            </summary>
            <param name="Da">
            An open DataAccess object from calling method
            </param>
            <param name="Keys">
            Key Object to use
            </param>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBaseRowDetail.Save(DataObjects_Framework.DataAccess.Interface_DataAccess)">
            <summary>
            Saves the changes to the detail table
            </summary>
            <param name="Da">
            An open DataAccess from calling method
            </param>
        </member>
        <member name="P:DataObjects_Framework.Base.ClsBaseRowDetail.pTableName">
            <summary>
            Gets the defined table name for this row detail
            </summary>
        </member>
        <member name="P:DataObjects_Framework.Base.ClsBaseRowDetail.pDr">
            <summary>
            Gets the DataRow object for this row detail
            </summary>
        </member>
        <member name="T:DataObjects_Framework.Base.ClsBase_List">
            <summary>
            Base Class for Data Objects, a List will be loaded instead
            The List can be edited and saved to the defined Table Name
            </summary>
        </member>
        <member name="F:DataObjects_Framework.Base.ClsBase_List.mQc_LoadCondition">
            <summary>
            The additional fetching conditions is stored here.
            </summary>
        </member>
        <member name="F:DataObjects_Framework.Base.ClsBase_List.mDt_List">
            <summary>
            The data table storage for the loaded Data Object, Me.Load() required
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase_List.Setup(System.String,System.String,DataObjects_Framework.Objects.ClsQueryCondition)">
            <summary>
            Sets the data object definition, 
            must be set preferably in the constructor of the derived object
            </summary>
            <param name="TableName">
            Table Name of the data object will be using
            </param>
            <param name="ViewName">
            View Name of the data object 
            this will be used Me.Load() if supplied
            </param>
            <param name="Qc_LoadCondition">
            Additional conditions when fetching the data object
            </param>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase_List.List(System.String,System.String)">
            <summary>
            Not Implemented, use Me.Load()
            </summary>
            <param name="Condition"></param>
            <param name="Sort"></param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase_List.List(DataObjects_Framework.Objects.ClsQueryCondition,System.String,System.Int32,System.Int32)">
            <summary>
            Not Implemented, use Me.Load()
            </summary>
            <param name="Condition"></param>
            <param name="Sort"></param>
            <param name="Top"></param>
            <param name="Page"></param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase_List.Load(DataObjects_Framework.Objects.ClsKeys)">
            <summary>
            (Overrided) Loads the List with the supplied Key
            </summary>
            <param name="Keys">
            Key object to use
            </param>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase_List.Load(System.String)">
            <summary>
            (Overridable) Loads the List with the supplied condition string
            </summary>
            <param name="Condition">
            String condition to use
            </param>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase_List.Load(DataObjects_Framework.Objects.ClsQueryCondition)">
            <summary>
            (Overridable) Loads the List with the supplied QueryCondition object
            </summary>
            <param name="Condition">
            QueryCondition object to use
            </param>
        </member>
        <member name="M:DataObjects_Framework.Base.ClsBase_List.Save(DataObjects_Framework.DataAccess.Interface_DataAccess)">
            <summary>
            (Overrided) Saves changes to the List
            </summary>
            <param name="Da">
            Optional, an open Data_Access Objects that is reused from the calling method
            </param>
            <returns></returns>
        </member>
        <member name="P:DataObjects_Framework.Base.ClsBase_List.pDt_List">
            <summary>
            Get Property, gets the List datatable for the Data Object, Me.Load() required
            </summary>
        </member>
        <member name="T:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer">
            <summary>
            The SQL Server implementation of Interface_DataAccess
            </summary>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer.GetQuery(DataObjects_Framework.Connection.Interface_Connection,System.String,System.String,System.String,System.String)">
            <summary>
            Fetches a result set from a data source object
            </summary>
            <param name="Connection">
            An open connection object
            </param>
            <param name="SourceObject">
            Data source object to fetch from
            </param>
            <param name="Fields">
            List of fields tp fetch (SQL valid syntax)
            </param>
            <param name="Condition">
            Condition to use the filter the result set (SQL Where valid syntax)
            </param>
            <param name="Sort">
            Sort expression to use to sort the result set (SQL Order By valid syntax)
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer.GetQuery(System.String,System.String,System.String,System.String)">
            <summary>
            Fetches a result set from a data source object
            </summary>
            <param name="SourceObject">
            Data source object to fetch from
            </param>
            <param name="Fields">
            List of fields tp fetch (SQL valid syntax)
            </param>
            <param name="Condition">
            Condition to use the filter the result set (SQL Where valid syntax)
            </param>
            <param name="Sort">
            Sort expression to use to sort the result set (SQL Order By valid syntax)
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer.GetQuery(DataObjects_Framework.Connection.Interface_Connection,System.String,System.String,DataObjects_Framework.Objects.ClsQueryCondition,System.String,System.Int64,System.Int32)">
            <summary>
            Fetches a result set from a data source object
            </summary>
            <param name="Connection">
            An open connection object
            </param>
            <param name="SourceObject">
            Data source object to fetch from
            </param>
            <param name="Fields">
            List of fields tp fetch (SQL valid syntax)
            </param>
            <param name="Condition">
            ClsQueryCondition Object to use the filter the result set
            </param>
            <param name="Sort">
            Sort expression to use to sort the result set (SQL Order By valid syntax)
            </param>
            <param name="Top">
            Limits the number of returned rows in the result set,
            used in pagination
            </param>
            <param name="Page">
            Selects a section based on the Page and Top values in the result set,
            used in pagination
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer.GetQuery(System.String,System.String,DataObjects_Framework.Objects.ClsQueryCondition,System.String,System.Int64,System.Int32)">
            <summary>
            Fetches a result set from a data source object
            </summary>
            <param name="SourceObject">
            Data source object to fetch from
            </param>
            <param name="Fields">
            List of fields tp fetch (SQL valid syntax)
            </param>
            <param name="Condition">
            ClsQueryCondition Object to use the filter the result set
            </param>
            <param name="Sort">
            Sort expression to use to sort the result set (SQL Order By valid syntax)
            </param>
            <param name="Top">
            Limits the number of returned rows in the result set,
            used in pagination
            </param>
            <param name="Page">
            Selects a section based on the Page and Top values in the result set,
            used in pagination
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer.Connect">
            <summary>
            Connects to the defined datasource
            </summary>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer.Close">
            <summary>
            Closes the current connection
            </summary>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer.BeginTransaction">
            <summary>
            Begins a new transaction
            </summary>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer.CommitTransaction">
            <summary>
            Commits the current transaction
            </summary>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer.RollbackTransaction">
            <summary>
            Reverts the current transaction
            </summary>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer.SaveDataRow(System.Data.DataRow,System.String,System.String,System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Saves the datarow to the target table
            </summary>
            <param name="ObjDataRow">
            The source datarow to be saved
            </param>
            <param name="TableName">
            The name of the table to be operated
            </param>
            <param name="SchemaName">
            The name of the schema of the target table
            </param>
            <param name="IsDelete">
            If true, the operation will be a Delete operation
            </param>
            <param name="CustomKeys">
            Custom Key definition
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer.List(System.String,System.String,System.String)">
            <summary>
            Returns a List based on the supplied Table/View Name
            </summary>
            <param name="ObjectName">
            The source data object name
            </param>
            <param name="Condition">
            Additional conditions to be used in fetching the data
            </param>
            <param name="Sort">
            Additional sorting to be used in fetching the data
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer.List(System.String,DataObjects_Framework.Objects.ClsQueryCondition,System.String,System.Int32,System.Int32)">
            <summary>
            Returns a List based on the supplied Table/View Name
            </summary>
            <param name="ObjectName">
            The source data object name
            </param>
            <param name="Condition">
            ClsQueryCondition Object to be used in fetching the data
            </param>
            <param name="Sort">
            Additional sorting to be used in fetching the data
            </param>
            <param name="Top">
            Limits the result set, mainly used for pagination
            </param>
            <param name="Page">
            Fetch a section of the result set based on the supplied Top, mainly used for pagination
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer.List_Count(System.String,DataObjects_Framework.Objects.ClsQueryCondition)">
            <summary>
            Returns the Result Set Count with out actually fetching the result set, mainly used for pagination
            </summary>
            <param name="ObjectName">
            The source data object name
            </param>
            <param name="Condition">
            ClsQueryCondition Object to be used in fetching the data
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer.List_Empty(DataObjects_Framework.Connection.Interface_Connection,System.String)">
            <summary>
            Returns a Empy List based on the supplied source data object Name
            Used for getting the definition of the data object
            </summary>
            <param name="Connection">
            An open connection object
            </param>
            <param name="ObjectName">
            The source data object name
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer.List_Empty(System.String)">
            <summary>
            Returns a Empy List based on the supplied source data object Name
            Used for getting the definition of the data object
            </summary>
            <param name="ObjectName">
            The source data object name
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer.Load(System.String,System.Collections.Generic.List{System.String},DataObjects_Framework.Objects.ClsKeys)">
            <summary>
            Loads the Data Object with the supplied Key,
            when loading table details, the framework assumes the foreign key field of the table detail is the same the parent table
            if not supplied by an explicit foreign key definition
            </summary>
            <param name="ObjectName">
            The source data object to be fetched
            </param>
            <param name="List_Key">
            The defined Key names of the data objects
            </param>
            <param name="Keys">
            The ClsKey object to use
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer.Load_TableDetails(System.String,DataObjects_Framework.Objects.ClsKeys,System.String,System.Collections.Generic.List{DataObjects_Framework.Common.Do_Constants.Str_ForeignKeyRelation})">
            <summary>
            Loads the defined Data Object Table Detail
            </summary>
            <param name="ObjectName">
            The source data object of the Table Detail
            </param>
            <param name="Keys">
            The ClsKey object to use
            </param>
            <param name="Condition">
            Additional conditions to be used in fetching the data
            </param>
            <param name="ForeignKeys">
            Custom defined Keys of the Table Detail
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer.Load_RowDetails(System.String,DataObjects_Framework.Objects.ClsKeys,System.String,System.Collections.Generic.List{DataObjects_Framework.Common.Do_Constants.Str_ForeignKeyRelation})">
            <summary>
            Loads the defined Data Object Row Detail
            </summary>
            <param name="ObjectName">
            The source data object of the Row Detail
            </param>
            <param name="Keys">
            The ClsKey object to use
            </param>
            <param name="Condition">
            Additional conditions to be used in fetching the data
            </param>
            <param name="ForeignKeys">
            Custom defined Keys of the Row Detail
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer.CreateQueryCondition">
            <summary>
            Creates a ClsQueryCondition based on the SQL Server implementation
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer.GetTableDef(System.String)">
            <summary>
            Gets the definition of the requested data object
            </summary>
            <param name="TableName">
            The requested data object name
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer.GetSystemParameter(System.String,System.String)">
            <summary>
            Gets the specified system parameter value, or creates a new system parameter with the specified default value
            </summary>
            <param name="ParameterName">
            The system parameter name
            </param>
            <param name="DefaultValue">
            The default value for the parameter if it doesn't exists
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer.GetSystemParameter(DataObjects_Framework.Connection.Interface_Connection,System.String,System.String)">
            <summary>
            Gets the specified system parameter value, or creates a new system parameter with the specified default value
            </summary>
            <param name="Connection">
            An open connection object
            </param>
            <param name="ParameterName">
            The system parameter name
            </param>
            <param name="DefaultValue">
            The default value for the parameter if it doesn't exists
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer.SetSystemParameter(System.String,System.String)">
            <summary>
            Sets a new value to the specified system parameter
            </summary>
            <param name="ParameterName">
            The system parameter name
            </param>
            <param name="ParameterValue">
            The value to be set
            </param>
        </member>
        <member name="M:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer.SetSystemParameter(DataObjects_Framework.Connection.Interface_Connection,System.String,System.String)">
            <summary>
            Sets a new value to the specified system parameter
            </summary>
            <param name="Connection">
            An open connection object
            </param>
            <param name="ParameterName">
            The system parameter name
            </param>
            <param name="ParameterValue">
            The value to be set
            </param>
        </member>
        <member name="P:DataObjects_Framework.DataAccess.ClsDataAccess_SqlServer.Connection">
            <summary>
            Gets the current using Connection Object used by this instance
            </summary>
        </member>
        <member name="T:DataObjects_Framework.Objects.ClsQueryCondition">
            <summary>
            Used for adding conditions for various fetching methods,
            generally used to avoid Sql Injection attacks
            </summary>
        </member>
        <member name="F:DataObjects_Framework.Objects.ClsQueryCondition.mQc">
            <summary>
            The condition object collection
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Objects.ClsQueryCondition.Add(System.String,System.String,System.Object,System.String,System.String)">
            <summary>
            Add a condition
            </summary>
            <param name="Name">
            Field Name on the data source
            </param>
            <param name="Operator">
            Operator to use (SQL valid operators)
            </param>
            <param name="Value">
            The condition value
            </param>
            <param name="DataType">
            Field Data Type
            </param>
            <param name="DefaultValue">
            Default value to use with ISNULL function
            </param>
        </member>
        <member name="M:DataObjects_Framework.Objects.ClsQueryCondition.Add(System.String,System.String,System.String,System.String)">
            <summary>
            Add a condition
            </summary>
            <param name="Name">
            Field Name on the data source
            </param>
            <param name="Condition">
            The condition value
            </param>
            <param name="DataType">
            Field Data Type
            </param>
            <param name="DefaultValue">
            Default value to use with ISNULL function
            </param>
        </member>
        <member name="M:DataObjects_Framework.Objects.ClsQueryCondition.Count">
            <summary>
            Returns the number of conditions in this instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Objects.ClsQueryCondition.GetQueryCondition">
            <summary>
            Returns the parameterized condition string, to be used with data fetching.
            Used internally.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Objects.ClsQueryCondition.GetParameters">
            <summary>
            Returns the SqlParameter Collection associated in the conditions in this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Objects.ClsQueryCondition.GetQueryCondition_String">
            <summary>
            Returns the non-parameterized condition string, to be used with data fetching.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Objects.ClsQueryCondition.pValue_Get(System.String)">
            <summary>
            Gets the condition object value based on the name supplied
            </summary>
            <param name="Name">
            The name of the condition object to get the value from
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Objects.ClsQueryCondition.pValue_Set(System.String,System.Object)">
            <summary>
            Sets the new condition object value based on the name supplied
            </summary>
            <param name="Name">
            The name of the object to set its value
            </param>
            <param name="Value">
            The new value to set
            </param>
        </member>
        <member name="M:DataObjects_Framework.Objects.ClsQueryCondition.pObj_Get(System.String)">
            <summary>
            Gets the condition object based on the name supplied
            </summary>
            <param name="Name">
            The name of the condition object to get
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Objects.ClsQueryCondition.pObj_Set(System.String,DataObjects_Framework.Objects.ClsQueryCondition.Str_QueryCondition)">
            <summary>
            Sets a new condition object based on the name supplied
            </summary>
            <param name="Name">
            The name of the condition object to overwrite
            </param>
            <param name="Value">
            The new condition object to assign
            </param>
        </member>
        <member name="P:DataObjects_Framework.Objects.ClsQueryCondition.pList">
            <summary>
            Gets the condition object collection
            </summary>
        </member>
        <member name="T:DataObjects_Framework.Objects.ClsQueryCondition.Str_QueryCondition">
            <summary>
            Struct Query Condition
            </summary>
        </member>
        <member name="F:DataObjects_Framework.Objects.ClsQueryCondition.Str_QueryCondition.Name">
            <summary>
            The Name of the condition
            </summary>
        </member>
        <member name="F:DataObjects_Framework.Objects.ClsQueryCondition.Str_QueryCondition.FieldName">
            <summary>
            The Field Name of the condition on the data source
            </summary>
        </member>
        <member name="F:DataObjects_Framework.Objects.ClsQueryCondition.Str_QueryCondition.Operator">
            <summary>
            The operator of the condition
            </summary>
        </member>
        <member name="F:DataObjects_Framework.Objects.ClsQueryCondition.Str_QueryCondition.Value">
            <summary>
            The condition value
            </summary>
        </member>
        <member name="F:DataObjects_Framework.Objects.ClsQueryCondition.Str_QueryCondition.DataType">
            <summary>
            The data type of the condition field
            </summary>
        </member>
        <member name="F:DataObjects_Framework.Objects.ClsQueryCondition.Str_QueryCondition.DefaultValue">
            <summary>
            The default value of the condition field if its null
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Objects.ClsQueryCondition.Str_QueryCondition.#ctor(System.String,System.String,System.String,System.Object,System.String,System.String)">
            <summary>
            Constructor for Str_QueryCondition
            </summary>
            <param name="pName"></param>
            <param name="pFieldName"></param>
            <param name="pOperator"></param>
            <param name="pValue"></param>
            <param name="pDataType"></param>
            <param name="pDefaultValue"></param>
        </member>
        <member name="T:DataObjects_Framework.Connection.ClsPreparedQuery">
            <summary>
            Wrapper for prepared sql statements, provides various methods for ease of use, (implemented using SQL Server)
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Connection.ClsPreparedQuery.#ctor(DataObjects_Framework.Connection.ClsConnection_SqlServer,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Constructor for ClsPreparedQuery, uses the ClsConnection_SqlServer object
            </summary>
            <param name="Cn">
            An open ClsConnection_SqlServer object
            </param>
            <param name="Query">
            The query string to be executed
            </param>
            <param name="ArrSp">
            Array of parameters to be used
            </param>
        </member>
        <member name="M:DataObjects_Framework.Connection.ClsPreparedQuery.#ctor(DataObjects_Framework.Connection.ClsConnection_SqlServer)">
            <summary>
            Constructor for ClsPreparedQuery, uses the ClsConnection_SqlServer object
            </summary>
            <param name="Cn">
            An open ClsConnection_SqlServer object
            </param>
        </member>
        <member name="M:DataObjects_Framework.Connection.ClsPreparedQuery.#ctor">
            <summary>
            Constructor for ClsPreparedQuery, uses the ClsConnection_SqlServer object
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Connection.ClsPreparedQuery.Finalize">
            <summary>
            Deconstructor for ClsPreparedQuery
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Connection.ClsPreparedQuery.Add_Parameter(System.Data.SqlClient.SqlParameter[])">
            <summary>
            Adds parameters from an array of parameters
            </summary>
            <param name="Arr_Sp"></param>
        </member>
        <member name="M:DataObjects_Framework.Connection.ClsPreparedQuery.Add_Parameter(System.Data.SqlClient.SqlParameter)">
            <summary>
            Adds a new parameter
            </summary>
            <param name="Sp"></param>
        </member>
        <member name="M:DataObjects_Framework.Connection.ClsPreparedQuery.Add_Parameter(System.String,System.Data.SqlDbType,System.Int32,System.Byte,System.Byte,System.Object)">
            <summary>
            Adds a new parameter
            </summary>
            <param name="Name">
            The parameter name
            </param>
            <param name="DbType">
            The datatype of the parameter
            </param>
            <param name="Size">
            The size of the parameter, only needed in text datatypes such as varchar, nchar, etc.
            </param>
            <param name="Precision">
            The precision value of the parameter, only needed in Numeric and Decimal datatypes
            </param>
            <param name="Scale">
            The scale value of the parameter, only needed in Numeric and Decimal datatypes
            </param>
            <param name="Value">
            The parameter value
            </param>
        </member>
        <member name="M:DataObjects_Framework.Connection.ClsPreparedQuery.Prepare">
            <summary>
            Creates a prepared version of the command on an instance of SQL Server.
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Connection.ClsPreparedQuery.ExecuteQuery">
            <summary>
            Executes the query with the supplied parameters and returns the resulting data set.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Connection.ClsPreparedQuery.ExecuteNonQuery">
            <summary>
            Executes the query with the supplied parameters without returning the result set.
            </summary>
        </member>
        <member name="P:DataObjects_Framework.Connection.ClsPreparedQuery.pDa">
            <summary>
            Gets the connection object in this instance.
            </summary>
        </member>
        <member name="P:DataObjects_Framework.Connection.ClsPreparedQuery.pCmd">
            <summary>
            Gets the sql command object in this instance.
            </summary>
        </member>
        <member name="P:DataObjects_Framework.Connection.ClsPreparedQuery.pParameters">
            <summary>
            Gets the parameter collection in this instance.
            </summary>
        </member>
        <member name="P:DataObjects_Framework.Connection.ClsPreparedQuery.pQuery">
            <summary>
            Gets/Sets the query text in this instance.
            </summary>
        </member>
        <member name="T:DataObjects_Framework.Common.Do_Methods">
            <summary>
            Common Methods used by the framework are defined here.
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Common.Do_Methods.IsNull(System.Object,System.Object)">
            <summary>
            Checks the input objects and returns a default if it is a null, this includes for DBNull checking
            </summary>
            <param name="Obj_Input">
            The input object
            </param>
            <param name="Obj_NullOutput">
            The default output
            </param>
            <returns></returns>
        </member>
        <member name="T:DataObjects_Framework.Common.Do_Constants">
            <summary>
            Constants and structs used in the framework are defined here.
            </summary>
        </member>
        <member name="T:DataObjects_Framework.Common.Do_Constants.Str_Parameters">
            <summary>
            Struct Str_Parameters, used in various query execution methods.
            </summary>
        </member>
        <member name="T:DataObjects_Framework.Common.Do_Constants.Str_Sort">
            <summary>
            Struct Str_Sort
            </summary>
        </member>
        <member name="T:DataObjects_Framework.Common.Do_Constants.Str_ForeignKeyRelation">
            <summary>
            Provides structure for custom Foreign Key definitions
            </summary>
        </member>
        <member name="F:DataObjects_Framework.Common.Do_Constants.Str_ForeignKeyRelation.Parent_Key">
            <summary>
            The primary key of the parent table
            </summary>
        </member>
        <member name="F:DataObjects_Framework.Common.Do_Constants.Str_ForeignKeyRelation.Child_Key">
            <summary>
            The matching foreign key for the target table detail
            </summary>
        </member>
        <member name="T:DataObjects_Framework.Connection.Interface_Connection">
            <summary>
            Interface for the connection object used
            </summary>
        </member>
        <member name="P:DataObjects_Framework.Connection.Interface_Connection.pConnection">
            <summary>
            The connection object
            </summary>
        </member>
        <member name="P:DataObjects_Framework.Connection.Interface_Connection.pTransaction">
            <summary>
            The transaction object used by this connection
            </summary>
        </member>
        <member name="T:DataObjects_Framework.Connection.ClsConnection_SqlServer">
            <summary>
            The SQL Server implementation of Interface_Connection
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Connection.ClsConnection_SqlServer.Connect">
            <summary>
            Opens a new connection with the specified connection string in Do_Globals.gSettings.pConnectionString.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Connection.ClsConnection_SqlServer.Close">
            <summary>
            Closes the current connection and disposes the transaction object if it exists.
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Connection.ClsConnection_SqlServer.BeginTransaction">
            <summary>
            Starts a database transaction.
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Connection.ClsConnection_SqlServer.CommitTransaction">
            <summary>
            Commits the database transaction.
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Connection.ClsConnection_SqlServer.RollbackTransaction">
            <summary>
            Rolls back a transaction from a pending state.
            </summary>
        </member>
        <member name="M:DataObjects_Framework.Connection.ClsConnection_SqlServer.ExecuteNonQuery(System.String,System.Collections.Generic.List{DataObjects_Framework.Common.Do_Constants.Str_Parameters})">
            <summary>
            Executes a SQL Server stored procedure.
            </summary>
            <param name="ProcedureName">
            The stored procedure name to be executed.
            </param>
            <param name="ProcedureParameters">
            A list of parameters to use with the execution.
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Connection.ClsConnection_SqlServer.ExecuteNonQuery(System.String,DataObjects_Framework.Common.Do_Constants.Str_Parameters[])">
            <summary>
            Executes a SQL Server stored procedure.
            </summary>
            <param name="ProcedureName">
            The stored procedure name to be executed.
            </param>
            <param name="ProcedureParameters">
            An array of parameters to use with the execution.
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Connection.ClsConnection_SqlServer.ExecuteNonQuery(System.String)">
            <summary>
            Executes a SQL Server Query Text.
            </summary>
            <param name="Query"></param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Connection.ClsConnection_SqlServer.ExecuteQuery(System.String,System.Collections.Generic.List{DataObjects_Framework.Common.Do_Constants.Str_Parameters})">
            <summary>
            Executes a SQL Server stored procedure and returns the resulting data set.
            </summary>
            <param name="ProcedureName">
            The stored procedure name to be executed.
            </param>
            <param name="ProcedureParameters">
            A list of parameters to use with the execution.
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Connection.ClsConnection_SqlServer.ExecuteQuery(System.String,DataObjects_Framework.Common.Do_Constants.Str_Parameters[])">
            <summary>
            Executes a SQL Server stored procedure and returns the resulting data set.
            </summary>
            <param name="ProcedureName">
            The stored procedure name to be executed.
            </param>
            <param name="ProcedureParameters">
            An array of parameters to use with the execution.
            </param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Connection.ClsConnection_SqlServer.ExecuteQuery(System.String)">
            <summary>
            Executes a SQL Server Query Text and returns the resulting data set.
            </summary>
            <param name="Query"></param>
            <returns></returns>
        </member>
        <member name="M:DataObjects_Framework.Connection.ClsConnection_SqlServer.SaveDataRow(System.Data.DataRow,System.String,System.String,System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Saves the datarow to the target table in the current connection.
            </summary>
            <param name="ObjDataRow">
            The source datarow to be saved.
            </param>
            <param name="TableName">
            The name of the table to be operated.
            </param>
            <param name="SchemaName">
            The name of the schema of the target table.
            </param>
            <param name="IsDelete">
            If true, the operation will be a Delete operation.
            </param>
            <param name="CustomKeys">
            Custom Key definition.
            </param>
            <returns></returns>
        </member>
        <member name="P:DataObjects_Framework.Connection.ClsConnection_SqlServer.pConnection">
            <summary>
            Gets the current connection object
            </summary>
        </member>
        <member name="P:DataObjects_Framework.Connection.ClsConnection_SqlServer.pTransaction">
            <summary>
            Gets the current transaction object
            </summary>
        </member>
        <member name="T:DataObjects_Framework.Common.Do_Globals">
            <summary>
            All the framework wide variables can be accessed here.
            </summary>
        </member>
        <member name="P:DataObjects_Framework.Common.Do_Globals.gSettings">
            <summary>
            Global Settings for the framework can be set here.
            </summary>
        </member>
        <member name="T:DataObjects_Framework.Common.Global_Settings">
            <summary>
            Global Settings class (Singleton)
            </summary>
        </member>
        <member name="P:DataObjects_Framework.Common.Global_Settings.Instance">
            <summary>
            Get instance object
            </summary>
        </member>
        <member name="P:DataObjects_Framework.Common.Global_Settings.pConnectionString">
            <summary>
            Sets the connection string the framework will use during fetching
            </summary>
        </member>
        <member name="P:DataObjects_Framework.Common.Global_Settings.pUseSoftDelete">
            <summary>
            Sets if the framework will use the soft delete feature, 
            will require the "IsDeleted As Bit" field on tables to use this feature.
            </summary>
        </member>
    </members>
</doc>
